{
  "version": 4,
  "terraform_version": "1.9.6",
  "serial": 13,
  "lineage": "01ed8fbe-3c7a-2e27-9dd6-9bf8a7ff1e6b",
  "outputs": {
    "instance_id": {
      "value": "i-072128a3680589e17",
      "type": "string"
    },
    "public_ip": {
      "value": "3.108.237.62",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "app_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-03f4878755434977f",
            "arn": "arn:aws:ec2:ap-south-1:957798448690:instance/i-072128a3680589e17",
            "associate_public_ip_address": true,
            "availability_zone": "ap-south-1b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-072128a3680589e17",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t3.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "dev-key",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-03e5c83895dffadfb",
            "private_dns": "ip-172-31-13-138.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.13.138",
            "public_dns": "ec2-3-108-237-62.ap-south-1.compute.amazonaws.com",
            "public_ip": "3.108.237.62",
            "region": "ap-south-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-0307d5f0b73e5ed21",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "dev-app-server-sg"
            ],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-044f3bf3525fb2860",
            "tags": {
              "Environment": "dev",
              "Name": "dev-app-server"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "dev-app-server"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\r\n# Change to home directory immediately\r\ncd /home/ubuntu\r\n\r\n# Log everything to a file for debugging in home directory\r\nexec \u003e /home/ubuntu/user-data.log 2\u003e\u00261\r\nset -x  # Enable command tracing for better debugging\r\n\r\n# Create a marker file to indicate script has started\r\ntouch /home/ubuntu/user-data-started\r\necho \"User data script started at $(date)\" \u003e /home/ubuntu/user-data-started\r\n\r\necho \"---- Updating package list ----\"\r\nsudo apt-get update -y\r\n\r\necho \"---- Installing Java 21 ----\"\r\nsudo apt-get install -y wget gnupg2 software-properties-common\r\n\r\nsudo mkdir -p /etc/apt/keyrings\r\nwget -O- https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor | sudo tee /etc/apt/keyrings/adoptium.gpg \u003e /dev/null\r\n\r\necho \"deb [signed-by=/etc/apt/keyrings/adoptium.gpg] https://packages.adoptium.net/artifactory/deb jammy main\" | sudo tee /etc/apt/sources.list.d/adoptium.list\r\n\r\nsudo apt-get update -y\r\nsudo apt-get install -y temurin-21-jdk\r\n\r\necho \"---- Installing Maven and Git ----\"\r\nsudo apt-get install -y maven git\r\n\r\necho \"---- Cloning Spring Boot App ----\"\r\n# Already in /home/ubuntu from initial cd command\r\ngit clone https://github.com/atharva5683/tech_eazy_devops_atharva5683 app\r\ncd app\r\n\r\necho \"---- Building App with Maven ----\"\r\nmvn clean package\r\n\r\necho \"---- Running Spring Boot App ----\"\r\nnohup java -jar target/techeazy-devops-0.0.1-SNAPSHOT.jar \u003e springboot.log 2\u003e\u00261 \u0026\r\n\r\n# Store the PID of the Spring Boot app\r\napp_pid=$!\r\necho \"Spring Boot app started with PID: $app_pid\"\r\n\r\n# Wait for the application to start up\r\necho \"Waiting for Spring Boot app to start up...\"\r\nsleep 30\r\n\r\n# Check if the application is running\r\nif ps -p $app_pid \u003e /dev/null; then\r\n  echo \"Spring Boot application is running with PID: $app_pid\"\r\n  \r\n  # Test if the application responds to HTTP requests\r\n  if [ \"true\" = \"true\" ]; then\r\n    echo \"Verifying application HTTP response...\"\r\n    max_attempts=10\r\n    attempt=1\r\n    success=false\r\n    \r\n    while [ $attempt -le $max_attempts ] \u0026\u0026 [ \"$success\" = \"false\" ]; do\r\n      echo \"Attempt $attempt of $max_attempts to verify application...\"\r\n      # Try both root endpoint and health endpoint\r\n      response_code=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:8080/ || echo \"failed\")\r\n      health_code=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:8080/health || echo \"failed\")\r\n      \r\n      if [ \"$response_code\" = \"200\" ] || [ \"$health_code\" = \"200\" ]; then\r\n        echo \"SUCCESS: Application is responding with HTTP 200 OK\"\r\n        success=true\r\n      else\r\n        echo \"Application returned HTTP codes: / -\u003e $response_code, /health -\u003e $health_code\"\r\n        echo \"Waiting 10 seconds before retry...\"\r\n        sleep 10\r\n        attempt=$((attempt+1))\r\n      fi\r\n    done\r\n    \r\n    if [ \"$success\" = \"false\" ]; then\r\n      echo \"WARNING: Application is running but not responding with HTTP 200 OK after $max_attempts attempts\"\r\n      echo \"Check application logs at /home/ubuntu/app/springboot.log\"\r\n    fi\r\n  else\r\n    echo \"Application verification skipped as per configuration\"\r\n  fi\r\nelse\r\n  echo \"ERROR: Spring Boot application failed to start!\"\r\n  echo \"Check application logs at /home/ubuntu/app/springboot.log\"\r\nfi\r\n\r\n# Set up port forwarding from 80 to 8080\r\necho \"Setting up port forwarding from 80 to 8080...\"\r\nsudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080\r\nsudo iptables -t nat -A OUTPUT -p tcp --dport 80 -j REDIRECT --to-port 8080\r\n\r\n# Make iptables rules persistent\r\nsudo apt-get install -y iptables-persistent\r\nsudo netfilter-persistent save\r\n\r\n# Set up auto-shutdown if configured\r\nif [ 60 -gt 0 ]; then\r\n  echo \"Setting up auto-shutdown after 60 minutes\"\r\n  sudo shutdown -h +60 \"Auto-shutdown after 60 minutes as configured\"\r\n  echo \"Instance will automatically shut down after 60 minutes\"\r\nfi\r\n\r\n# Write a completion marker to indicate the script ran successfully\r\necho \"User data script completed successfully at $(date)\" \u003e /home/ubuntu/user-data-complete\r\n\r\n# Create a simple startup script that can be run manually if needed\r\ncat \u003e /home/ubuntu/start-app.sh \u003c\u003c 'EOF'\r\n#!/bin/bash\r\ncd /home/ubuntu/app\r\nnohup java -jar target/techeazy-devops-0.0.1-SNAPSHOT.jar \u003e springboot.log 2\u003e\u00261 \u0026\r\necho \"Application started with PID: $!\"\r\nEOF\r\n\r\nchmod +x /home/ubuntu/start-app.sh\r\necho \"Created manual startup script at /home/ubuntu/start-app.sh\"\r\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0114559e9b82af985"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.app_sg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "app_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:957798448690:security-group/sg-0114559e9b82af985",
            "description": "Security group for dev application",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0114559e9b82af985",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "dev-app-server-sg",
            "name_prefix": "",
            "owner_id": "957798448690",
            "region": "ap-south-1",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-0232d7819d60f1f35"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ],
  "check_results": null
}
